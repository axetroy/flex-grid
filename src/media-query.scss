@import "var";



@each $query in $min-query-name {
  $index: index($min-query-name, $query);
  $screen-width: nth($min-query-screen-width, $index);
  $container-width: nth($min-query-container-width, $index);

  @mixin query(){
    @for $i from 0 through $grid {
      .col-#{$query}-#{$i} {
        flex: 0 0 percentage($i/$grid);
        max-width: percentage($i/$grid);
      }
    }

    @for $i from 0 through $grid {
      .offset-#{$query}-#{$i} {
        margin-left: percentage($i/$grid);
      }
    }

    // pull
    @for $i from 0 through $grid {
      .pull-#{$query}-#{$i} {
        right: percentage($i/$grid);
      }
    }

    // push
    @for $i from 0 through $grid {
      .push-#{$query}-#{$i} {
        left: percentage($i/$grid);
      }
    }

    // grow
    @for $i from 0 through $grid {
      .grow-#{$query}-#{$i} {
        flex-grow: $i
      }
    }

    // 缩小比例 default:1
    @for $i from 0 through $grid {
      .shrink-#{$query}-#{$i} {
        flex-shrink: $i
      }
    }

    // 排序
    @for $i from 0 through $grid {
      .order-#{$query}-#{$i} {
        order: $i
      }
    }

    @each $wrapWay in $wrap-list {
      .#{$wrapWay}-#{$query} {
        flex-wrap: $wrapWay
      }
    }
  }

  @if $screen-width < 0 {
    @media screen and (max-width: abs($screen-width)) {
      @include query();
    }
  } @else {
    @media screen and (min-width: $screen-width) {
      @include query();

      .container {
        width: $container-width;
      }
    }
  }
}